@inject SessionState _state

@if (_state.Self is null)
{
    <div class="overlay">
        <div class="modal modal-md d-block"> <div class="modal-dialog"> <div class="modal-content"> <div class="modal-body">
            <form class="d-flex gap-2 w-100" @onsubmit=OnJoinClicked>
                <input type="text" class="form-control" placeholder="Enter your name to join the session" required pattern="(.|\s)*\S(.|\s)*" disabled="@(IsLoading)" @bind-value=Name>
                <button class="btn btn-primary btn-loadable" type="submit" disabled="@(IsLoading)">Join</button>
            </form>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger mb-0 mt-3">
                    <ion-icon name="alert-circle-sharp" style="margin-bottom: -8px; font-size: 20pt;"></ion-icon> @ErrorMessage
                </div>
            }
        </div> </div> </div> </div>
    </div>
}

@code {
    string Name { get; set; } = string.Empty;

    string? ErrorMessage { get; set; }

    bool IsLoading { get; set; }
    
    protected override void OnInitialized()
    {
        _state.OnStateChanged += (o, e) => StateHasChanged();
    }

    async Task OnJoinClicked()
    {
        if (!string.IsNullOrWhiteSpace(Name))
        {
            ErrorMessage = null;
            IsLoading = true;
            StateHasChanged();

            try
            {
                await _state.JoinAsync(Name);
            }
            catch
            {
                ErrorMessage = "An error occurred while joining the session. Please try again.";
            }
            
            IsLoading = false;
            StateHasChanged();
        }
    }
}