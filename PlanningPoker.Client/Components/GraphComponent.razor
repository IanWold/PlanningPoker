@inject SessionState _state

<div class="p-3" style="position: absolute; left:50%; bottom: 0; transform: translate(-50%, 0%);">
    <div class="d-flex gap-2 justify-content-between align-items-end p-2">
        @foreach (var count in PointCounts) {
            @if (count > 0) {
                <div>
                    <label class="w-100 text-center fw-bold" style="margin-top: -36px;">@count</label>
                    <div class="rounded mb-3 bg-secondary shadow" style="width: 36px; height: @(36 + (164 * ((double)count / (double)_state!.Session!.Participants.Count())))px;"></div>
                </div>
            }
            else {
                <div>
                    <label class="w-100 text-center fw-bold" style="margin-top: -36px;"></label>
                    <div class="rounded mb-3 bg-secondary-subtle shadow" style="width: 36px; height: 36px;"></div>
                </div>
            }
        }
    </div>
</div>

@code {
    IEnumerable<int> PointCounts =>
        _state!.Session!.Points.Select(point =>
            _state.Session.Participants.Where(p => p.Points == point).Count()
        );

    protected override void OnInitialized() {
        _state.OnStateChanged += (o, e) => StateHasChanged();
    }
}
